{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/baekki/Desktop/Portfolio/wedding-invitation/src/lib/supabase.ts"],"sourcesContent":["\nimport { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)\n\nexport interface Message {\n  id: number\n  name: string\n  message: string\n  created_at: string\n}\n"],"names":[],"mappings":";;;AACA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,yLAAA,CAAA,eAAY,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":["file:///Users/baekki/Desktop/Portfolio/wedding-invitation/src/app/api/messages/route.ts"],"sourcesContent":["\nimport { NextResponse } from 'next/server';\nimport { supabase } from '@/lib/supabase';\n\nexport async function GET() {\n  try {\n    const { data: messages, error } = await supabase\n      .from('messages')\n      .select('*')\n      .order('created_at', { ascending: false });\n\n    if (error) throw error;\n\n    return NextResponse.json(messages || []);\n  } catch (error) {\n    console.error('메시지 조회 실패:', error);\n    return NextResponse.json({ error: '메시지를 불러올 수 없습니다.' }, { status: 500 });\n  }\n}\n\nexport async function POST(request: Request) {\n  try {\n    const { name, message } = await request.json();\n\n    if (!name || !message) {\n      return NextResponse.json({ error: '이름과 메시지를 모두 입력해주세요.' }, { status: 400 });\n    }\n\n    const { data, error } = await supabase\n      .from('messages')\n      .insert([\n        {\n          name: name.trim(),\n          message: message.trim(),\n        }\n      ])\n      .select();\n\n    if (error) throw error;\n\n    return NextResponse.json({ success: true, data });\n  } catch (error) {\n    console.error('메시지 저장 실패:', error);\n    return NextResponse.json({ error: '메시지 저장에 실패했습니다.' }, { status: 500 });\n  }\n}\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAEO,eAAe;IACpB,IAAI;QACF,MAAM,EAAE,MAAM,QAAQ,EAAE,KAAK,EAAE,GAAG,MAAM,wHAAA,CAAA,WAAQ,CAC7C,IAAI,CAAC,YACL,MAAM,CAAC,KACP,KAAK,CAAC,cAAc;YAAE,WAAW;QAAM;QAE1C,IAAI,OAAO,MAAM;QAEjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC,YAAY,EAAE;IACzC,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAmB,GAAG;YAAE,QAAQ;QAAI;IACxE;AACF;AAEO,eAAe,KAAK,OAAgB;IACzC,IAAI;QACF,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,MAAM,QAAQ,IAAI;QAE5C,IAAI,CAAC,QAAQ,CAAC,SAAS;YACrB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAsB,GAAG;gBAAE,QAAQ;YAAI;QAC3E;QAEA,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,wHAAA,CAAA,WAAQ,CACnC,IAAI,CAAC,YACL,MAAM,CAAC;YACN;gBACE,MAAM,KAAK,IAAI;gBACf,SAAS,QAAQ,IAAI;YACvB;SACD,EACA,MAAM;QAET,IAAI,OAAO,MAAM;QAEjB,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM;QAAK;IACjD,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,cAAc;QAC5B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,OAAO;QAAkB,GAAG;YAAE,QAAQ;QAAI;IACvE;AACF","debugId":null}}]
}